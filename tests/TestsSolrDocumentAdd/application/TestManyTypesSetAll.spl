namespace application ;

use com.ibm.streamsx.solr::SolrDocumentSink ;
/** To use this sample, you can start Solr with the default Solr example (5.3.1)
		bin/solr start -p 8984 -s "example/techproducts/solr"
This will create a collection called techproducts.

Verifying this test:
	Ids 300-399 should be populated with name: ManyTypesSetAll
*/
composite TestManyTypesSetAll
{
	param
		expression<rstring> $solrServer : getSubmissionTimeValue("solrServer","http://g0601b02:8984/solr/" );
		expression<rstring> $solrCollection : getSubmissionTimeValue("solrCollection","techproducts" );
	graph
	
		/*
		 * Generate attributes as well as map.
		 * Notice: The unique id is not part of the map (it is specified in the operator parameters.
		 */ 
		stream<rstring id, rstring name, boolean my_bool_b, int32 my_int_i, float32 my_float_f, rstring features> Beacon_2_out0 = Custom()
		{
			logic
				onProcess :
				{
					rstring features = "This is a many types test with no map." ;
					rstring name = "ManyTypesSetAll" ;
					for(int32 j in range(100))
					{
						submit({ id =(rstring)(300 + j), name = name, my_bool_b = true, my_int_i = j, my_float_f = (float32) random(), features =
							features + (rstring)(300 + j)}, Beacon_2_out0) ;
						block(0.1) ;
					}

				}

		}

		
		//Test URL: http://g0601b02.pok.hpc-ng.ibm.com:8984/solr/techproducts/select/?wt=json&q=*:*&rows=200
		(stream<rstring message> ErrorPort) as SolrDocSinker =
			SolrDocumentSink(Beacon_2_out0)
		{
			param 
				uniqueKeyAttribute : id ;
				solrURL : $solrServer;
				collection : $solrCollection;
				documentCommitSize : 3;
				maxDocumentBufferAge : 3500;
		}

		() as ErrorWriter = Custom(ErrorPort)
		{
			logic onTuple ErrorPort : {
				printStringLn("Error : " + message);
			}
		}


}


